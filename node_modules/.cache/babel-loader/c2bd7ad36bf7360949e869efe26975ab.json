{"ast":null,"code":"import MVT from 'ol/format/MVT';\nimport VectorTileLayer from 'ol/layer/VectorTile';\nimport VectorTileSource from 'ol/source/VectorTile';\nconst NSI_HexBin_INITALIZE_START = 'NSI_HexBin_INITALIZE_START';\nconst NSI_HexBin_INITALIZE_END = 'NSI_HexBin_INITALIZE_END';\nconst MAP_INITIALIZED = 'MAP_INITIALIZED';\nconst hexbinLayers = {\n  'HB10K': 'hexbin10k',\n  'HB2500': 'hexbin2500',\n  'HB500': 'hexbin500'\n};\nexport default {\n  name: 'hexbins',\n  getReducer: () => {\n    const initialData = {\n      _shouldInitialize: false\n    };\n    return (state = initialData, {\n      type,\n      payload\n    }) => {\n      switch (type) {\n        case NSI_HexBin_INITALIZE_START:\n        case NSI_HexBin_INITALIZE_END:\n          return Object.assign({}, state, payload);\n\n        case MAP_INITIALIZED:\n          return Object.assign({}, state, {\n            _shouldInitialize: true\n          });\n\n        default:\n          return state;\n      }\n    };\n  },\n  doNsiHexBinInitialize: () => ({\n    dispatch,\n    store,\n    anonGet\n  }) => {\n    dispatch({\n      type: NSI_HexBin_INITALIZE_START,\n      payload: {\n        _shouldInitialize: false\n      }\n    });\n    initMap(store);\n  },\n  reactNsiShouldInitialize: state => {\n    if (state.hexbins._shouldInitialize) return {\n      actionCreator: \"doNsiHexBinInitialize\"\n    };\n  }\n};\n\nconst initMap = function (store) {\n  const map = store.selectMap();\n  let layer = new VectorTileLayer({\n    source: new VectorTileSource({\n      attributions: 'USACE',\n      format: new MVT(),\n      url: \"http://ec2-107-20-76-219.compute-1.amazonaws.com/services/hexbin10k/tiles/{z}/{x}/{y}.pbf\"\n    }) //style: createMapboxStreetsV6Style(Style, Fill, Stroke, Icon, Text)\n\n  }); //map.addLayer(layer)\n\n  const parentUid = store.selectTreeViewRootId();\n  store.doAddLayer({\n    displayName: 'National Structure Inventory HexBins',\n    parentUid: parentUid,\n    type: \"notfolder\",\n    mapLayer: layer,\n    visible: true,\n    zoomTo: false\n  });\n};","map":{"version":3,"sources":["C:/Examples/nsi_survey_tool/nsi_survey_tool/src/cm-plugins/hexbins/cm3-nsi-hexbin-bundle.js"],"names":["MVT","VectorTileLayer","VectorTileSource","NSI_HexBin_INITALIZE_START","NSI_HexBin_INITALIZE_END","MAP_INITIALIZED","hexbinLayers","name","getReducer","initialData","_shouldInitialize","state","type","payload","Object","assign","doNsiHexBinInitialize","dispatch","store","anonGet","initMap","reactNsiShouldInitialize","hexbins","actionCreator","map","selectMap","layer","source","attributions","format","url","parentUid","selectTreeViewRootId","doAddLayer","displayName","mapLayer","visible","zoomTo"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,eAAhB;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AAEA,MAAMC,0BAA0B,GAAC,4BAAjC;AACA,MAAMC,wBAAwB,GAAC,0BAA/B;AACA,MAAMC,eAAe,GAAC,iBAAtB;AAEA,MAAMC,YAAY,GAAC;AACjB,WAAQ,WADS;AAEjB,YAAS,YAFQ;AAGjB,WAAQ;AAHS,CAAnB;AAKA,eAAc;AACVC,EAAAA,IAAI,EAAC,SADK;AAEVC,EAAAA,UAAU,EAAE,MAAM;AAChB,UAAMC,WAAW,GAAG;AAClBC,MAAAA,iBAAiB,EAAE;AADD,KAApB;AAGA,WAAO,CAACC,KAAK,GAAGF,WAAT,EAAsB;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAtB,KAA4C;AACjD,cAAOD,IAAP;AACE,aAAKT,0BAAL;AACA,aAAKC,wBAAL;AACE,iBAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyBE,OAAzB,CAAP;;AACF,aAAKR,eAAL;AACE,iBAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BD,YAAAA,iBAAiB,EAAE;AADW,WAAzB,CAAP;;AAGF;AACE,iBAAOC,KAAP;AATJ;AAWD,KAZD;AAaD,GAnBS;AAoBVK,EAAAA,qBAAqB,EAAE,MAAM,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,GAAD,KAAkC;AAC7DF,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAET,0BADC;AAEPU,MAAAA,OAAO,EAAE;AACPH,QAAAA,iBAAiB,EAAE;AADZ;AAFF,KAAD,CAAR;AAMAU,IAAAA,OAAO,CAACF,KAAD,CAAP;AACD,GA5BS;AA6BVG,EAAAA,wBAAwB,EAAGV,KAAD,IAAW;AACnC,QAAGA,KAAK,CAACW,OAAN,CAAcZ,iBAAjB,EAAoC,OAAO;AAAEa,MAAAA,aAAa,EAAE;AAAjB,KAAP;AACrC;AA/BS,CAAd;;AAkCA,MAAMH,OAAO,GAAC,UAASF,KAAT,EAAe;AAC3B,QAAMM,GAAG,GAAGN,KAAK,CAACO,SAAN,EAAZ;AACA,MAAIC,KAAK,GAAC,IAAIzB,eAAJ,CAAoB;AAC5B0B,IAAAA,MAAM,EAAE,IAAIzB,gBAAJ,CAAqB;AAC3B0B,MAAAA,YAAY,EAAE,OADa;AAE3BC,MAAAA,MAAM,EAAE,IAAI7B,GAAJ,EAFmB;AAG3B8B,MAAAA,GAAG,EAAC;AAHuB,KAArB,CADoB,CAM5B;;AAN4B,GAApB,CAAV,CAF2B,CAU3B;;AACA,QAAMC,SAAS,GAAGb,KAAK,CAACc,oBAAN,EAAlB;AACAd,EAAAA,KAAK,CAACe,UAAN,CAAiB;AACfC,IAAAA,WAAW,EAAE,sCADE;AAEfH,IAAAA,SAAS,EAAEA,SAFI;AAGfnB,IAAAA,IAAI,EAAC,WAHU;AAIfuB,IAAAA,QAAQ,EAAET,KAJK;AAKfU,IAAAA,OAAO,EAAE,IALM;AAMfC,IAAAA,MAAM,EAAE;AANO,GAAjB;AAQD,CApBD","sourcesContent":["import MVT from 'ol/format/MVT';\r\nimport VectorTileLayer from 'ol/layer/VectorTile';\r\nimport VectorTileSource from 'ol/source/VectorTile';\r\n\r\nconst NSI_HexBin_INITALIZE_START='NSI_HexBin_INITALIZE_START';\r\nconst NSI_HexBin_INITALIZE_END='NSI_HexBin_INITALIZE_END';\r\nconst MAP_INITIALIZED='MAP_INITIALIZED';\r\n\r\nconst hexbinLayers={\r\n  'HB10K':'hexbin10k',\r\n  'HB2500':'hexbin2500',\r\n  'HB500':'hexbin500',\r\n}\r\nexport default{\r\n    name:'hexbins',\r\n    getReducer: () => {\r\n      const initialData = {\r\n        _shouldInitialize: false,\r\n      };\r\n      return (state = initialData, { type, payload }) => {\r\n        switch(type){\r\n          case NSI_HexBin_INITALIZE_START:\r\n          case NSI_HexBin_INITALIZE_END:\r\n            return Object.assign({}, state, payload);\r\n          case MAP_INITIALIZED:\r\n            return Object.assign({}, state, {\r\n              _shouldInitialize: true\r\n            })\r\n          default:\r\n            return state;\r\n        }\r\n      }\r\n    },\r\n    doNsiHexBinInitialize: () => ({ dispatch, store, anonGet }) => {\r\n      dispatch({\r\n        type: NSI_HexBin_INITALIZE_START,\r\n        payload: {\r\n          _shouldInitialize: false,\r\n        }\r\n      })\r\n      initMap(store);      \r\n    },\r\n    reactNsiShouldInitialize: (state) => {\r\n      if(state.hexbins._shouldInitialize) return { actionCreator: \"doNsiHexBinInitialize\" };\r\n    }\r\n  };\r\n\r\nconst initMap=function(store){\r\n  const map = store.selectMap();\r\n  let layer=new VectorTileLayer({\r\n    source: new VectorTileSource({\r\n      attributions: 'USACE',\r\n      format: new MVT(),\r\n      url:\"http://ec2-107-20-76-219.compute-1.amazonaws.com/services/hexbin10k/tiles/{z}/{x}/{y}.pbf\",\r\n    })\r\n    //style: createMapboxStreetsV6Style(Style, Fill, Stroke, Icon, Text)\r\n  })\r\n  //map.addLayer(layer)\r\n  const parentUid = store.selectTreeViewRootId();\r\n  store.doAddLayer({\r\n    displayName: 'National Structure Inventory HexBins',\r\n    parentUid: parentUid,\r\n    type:\"notfolder\",\r\n    mapLayer: layer,\r\n    visible: true,\r\n    zoomTo: false,\r\n  })\r\n};"]},"metadata":{},"sourceType":"module"}