{"ast":null,"code":"import v4 from \"uuid\";\nconst GEOPKG_INITALIZE_START = 'GEOPKG_INITALIZE_START';\nconst GEOPKG_INITALIZE_END = 'GEOPKG_INITALIZE_END';\nconst MAP_INITIALIZED = 'MAP_INITIALIZED';\nexport default {\n  name: 'geopkg',\n\n  getReducer() {\n    const initialData = {\n      _shouldInitialize: false\n    };\n    return (state = initialData, {\n      type,\n      payload\n    }) => {\n      switch (type) {\n        case GEOPKG_INITALIZE_START:\n        case GEOPKG_INITALIZE_END:\n          return Object.assign({}, state, payload);\n\n        case MAP_INITIALIZED:\n          return Object.assign({}, state, {\n            _shouldInitialize: true\n          });\n\n        default:\n          return state;\n      }\n    };\n  },\n\n  doGeoPkgInitialize: () => ({\n    dispatch,\n    store,\n    anonGet\n  }) => {\n    dispatch({\n      type: GEOPKG_INITALIZE_START,\n      payload: {\n        _shouldInitialize: false\n      }\n    });\n    initMap(store);\n  },\n  reactAepShouldInitialize: state => {\n    if (state.geopkg._shouldInitialize) return {\n      actionCreator: \"doGeoPkgInitialize\"\n    };\n  }\n};\n\nconst initMap = function (store) {\n  const map = store.selectMap();\n  console.log(map);\n  const lyr = null; //create a layer and assign your geopackage stuff or create many layers if the file has many layers \n\n  const parentUid = store.selectTreeViewRootId();\n  const uid = v4(); //the doAddLayer menthod might need some changes depending on your usage.\n\n  store.doAddLayer({\n    uid: uid,\n    displayName: 'Local GeoPackage',\n    parentUid: parentUid,\n    mapLayer: lyr,\n    serviceType: \"LocalGeoPackage\",\n    visible: true,\n    zoomTo: false\n  });\n};","map":{"version":3,"sources":["C:/Examples/webmap/web-map/src/cm-plugins/geopkg/cm-geopkg-bundle.js"],"names":["v4","GEOPKG_INITALIZE_START","GEOPKG_INITALIZE_END","MAP_INITIALIZED","name","getReducer","initialData","_shouldInitialize","state","type","payload","Object","assign","doGeoPkgInitialize","dispatch","store","anonGet","initMap","reactAepShouldInitialize","geopkg","actionCreator","map","selectMap","console","log","lyr","parentUid","selectTreeViewRootId","uid","doAddLayer","displayName","mapLayer","serviceType","visible","zoomTo"],"mappings":"AAAA,OAAOA,EAAP,MAAe,MAAf;AACA,MAAMC,sBAAsB,GAAC,wBAA7B;AACA,MAAMC,oBAAoB,GAAC,sBAA3B;AACA,MAAMC,eAAe,GAAC,iBAAtB;AAEA,eAAe;AACXC,EAAAA,IAAI,EAAC,QADM;;AAEXC,EAAAA,UAAU,GAAG;AACX,UAAMC,WAAW,GAAG;AAClBC,MAAAA,iBAAiB,EAAE;AADD,KAApB;AAGA,WAAO,CAACC,KAAK,GAAGF,WAAT,EAAsB;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAtB,KAA4C;AACjD,cAAOD,IAAP;AACE,aAAKR,sBAAL;AACA,aAAKC,oBAAL;AACE,iBAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyBE,OAAzB,CAAP;;AACF,aAAKP,eAAL;AACE,iBAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BD,YAAAA,iBAAiB,EAAE;AADW,WAAzB,CAAP;;AAGF;AACE,iBAAOC,KAAP;AATJ;AAWD,KAZD;AAaD,GAnBU;;AAoBXK,EAAAA,kBAAkB,EAAE,MAAM,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,GAAD,KAAkC;AAC1DF,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAER,sBADC;AAEPS,MAAAA,OAAO,EAAE;AACPH,QAAAA,iBAAiB,EAAE;AADZ;AAFF,KAAD,CAAR;AAMAU,IAAAA,OAAO,CAACF,KAAD,CAAP;AACD,GA5BU;AA6BXG,EAAAA,wBAAwB,EAAGV,KAAD,IAAW;AACnC,QAAGA,KAAK,CAACW,MAAN,CAAaZ,iBAAhB,EAAmC,OAAO;AAAEa,MAAAA,aAAa,EAAE;AAAjB,KAAP;AACpC;AA/BU,CAAf;;AAiCA,MAAMH,OAAO,GAAC,UAASF,KAAT,EAAe;AAC3B,QAAMM,GAAG,GAAGN,KAAK,CAACO,SAAN,EAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAEA,QAAMI,GAAG,GAAG,IAAZ,CAJ2B,CAIV;;AAEjB,QAAMC,SAAS,GAAGX,KAAK,CAACY,oBAAN,EAAlB;AACA,QAAMC,GAAG,GAAG5B,EAAE,EAAd,CAP2B,CAQ3B;;AACAe,EAAAA,KAAK,CAACc,UAAN,CAAiB;AACfD,IAAAA,GAAG,EAAEA,GADU;AAEfE,IAAAA,WAAW,EAAE,kBAFE;AAGfJ,IAAAA,SAAS,EAAEA,SAHI;AAIfK,IAAAA,QAAQ,EAAEN,GAJK;AAKfO,IAAAA,WAAW,EAAE,iBALE;AAMfC,IAAAA,OAAO,EAAE,IANM;AAOfC,IAAAA,MAAM,EAAE;AAPO,GAAjB;AASD,CAlBD","sourcesContent":["import v4 from \"uuid\";\r\nconst GEOPKG_INITALIZE_START='GEOPKG_INITALIZE_START';\r\nconst GEOPKG_INITALIZE_END='GEOPKG_INITALIZE_END';\r\nconst MAP_INITIALIZED='MAP_INITIALIZED';\r\n\r\nexport default {\r\n    name:'geopkg',\r\n    getReducer() {\r\n      const initialData = {\r\n        _shouldInitialize: false,\r\n      };\r\n      return (state = initialData, { type, payload }) => {\r\n        switch(type){\r\n          case GEOPKG_INITALIZE_START:\r\n          case GEOPKG_INITALIZE_END:\r\n            return Object.assign({}, state, payload);\r\n          case MAP_INITIALIZED:\r\n            return Object.assign({}, state, {\r\n              _shouldInitialize: true\r\n            })\r\n          default:\r\n            return state;\r\n        }\r\n      }\r\n    },\r\n    doGeoPkgInitialize: () => ({ dispatch, store, anonGet }) => {\r\n      dispatch({\r\n        type: GEOPKG_INITALIZE_START,\r\n        payload: {\r\n          _shouldInitialize: false,\r\n        }\r\n      })\r\n      initMap(store);      \r\n    },\r\n    reactAepShouldInitialize: (state) => {\r\n      if(state.geopkg._shouldInitialize) return { actionCreator: \"doGeoPkgInitialize\" };\r\n    }\r\n}\r\nconst initMap=function(store){\r\n  const map = store.selectMap();\r\n  console.log(map)\r\n\r\n  const lyr = null //create a layer and assign your geopackage stuff or create many layers if the file has many layers \r\n\r\n  const parentUid = store.selectTreeViewRootId();\r\n  const uid = v4();\r\n  //the doAddLayer menthod might need some changes depending on your usage.\r\n  store.doAddLayer({\r\n    uid: uid,\r\n    displayName: 'Local GeoPackage',\r\n    parentUid: parentUid,\r\n    mapLayer: lyr,\r\n    serviceType: \"LocalGeoPackage\",\r\n    visible: true,\r\n    zoomTo: false,\r\n  });\r\n}"]},"metadata":{},"sourceType":"module"}