{"ast":null,"code":"const NSI_HexBin_INITALIZE_START = 'NSI_HexBin_INITALIZE_START';\nconst NSI_HexBin_INITALIZE_END = 'NSI_HexBin_INITALIZE_END';\nconst MAP_HexBin_INITIALIZED = 'MAP_HexBin_INITIALIZED';\nconst hexbinLayers = {\n  'HB10K': 'hexbin10k',\n  'HB2500': 'hexbin2500',\n  'HB500': 'hexbin500'\n};\nexport default {\n  name: 'nsi-hexbins',\n  getReducer: () => {\n    const initialData = {\n      _shouldInitialize: false\n    };\n    return (state = initialData, {\n      type,\n      payload\n    }) => {\n      switch (type) {\n        case NSI_HexBin_INITALIZE_START:\n        case NSI_HexBin_INITALIZE_END:\n          return Object.assign({}, state, payload);\n\n        case MAP_INITIALIZED:\n          return Object.assign({}, state, {\n            _shouldInitialize: true\n          });\n\n        default:\n          return state;\n      }\n    };\n  },\n  doNsiHexBinInitialize: () => ({\n    dispatch,\n    store,\n    anonGet\n  }) => {\n    dispatch({\n      type: NSI_HexBin_INITALIZE_START,\n      payload: {\n        _shouldInitialize: false\n      }\n    });\n    initMap(store);\n  },\n  reactNsiShouldInitialize: state => {\n    if (state.nsi - hexbins._shouldInitialize) return {\n      actionCreator: \"doNsiHexBinInitialize\"\n    };\n  }\n};\n\nconst initMap = function (store) {\n  const map = store.selectMap();\n  let layer = new VectorTileLayer({\n    source: new VectorTileSource({\n      attributions: 'USACE',\n      format: new MVT(),\n      url: \"http://ec2-107-20-76-219.compute-1.amazonaws.com/services/hexbin10k/tiles/{z}/{x}/{y}.pbf\"\n    }) //style: createMapboxStreetsV6Style(Style, Fill, Stroke, Icon, Text)\n\n  });\n  map.addLayer(layer);\n};\n\nconst parentUid = store.selectTreeViewRootId();\nstore.doAddLayer({\n  displayName: 'National Structure Inventory HexBins',\n  parentUid: parentUid,\n  type: \"notfolder\",\n  mapLayer: vectorLayer1,\n  visible: true,\n  zoomTo: false\n});","map":{"version":3,"sources":["C:/Examples/nsi_survey_tool/nsi_survey_tool/src/cm-plugins/hexbins/cm3-nsi-hexbin-bundle.js"],"names":["NSI_HexBin_INITALIZE_START","NSI_HexBin_INITALIZE_END","MAP_HexBin_INITIALIZED","hexbinLayers","name","getReducer","initialData","_shouldInitialize","state","type","payload","Object","assign","MAP_INITIALIZED","doNsiHexBinInitialize","dispatch","store","anonGet","initMap","reactNsiShouldInitialize","nsi","hexbins","actionCreator","map","selectMap","layer","VectorTileLayer","source","VectorTileSource","attributions","format","MVT","url","addLayer","parentUid","selectTreeViewRootId","doAddLayer","displayName","mapLayer","vectorLayer1","visible","zoomTo"],"mappings":"AAAA,MAAMA,0BAA0B,GAAC,4BAAjC;AACA,MAAMC,wBAAwB,GAAC,0BAA/B;AACA,MAAMC,sBAAsB,GAAC,wBAA7B;AAEA,MAAMC,YAAY,GAAC;AACjB,WAAQ,WADS;AAEjB,YAAS,YAFQ;AAGjB,WAAQ;AAHS,CAAnB;AAKA,eAAc;AACVC,EAAAA,IAAI,EAAC,aADK;AAEVC,EAAAA,UAAU,EAAE,MAAM;AAChB,UAAMC,WAAW,GAAG;AAClBC,MAAAA,iBAAiB,EAAE;AADD,KAApB;AAGA,WAAO,CAACC,KAAK,GAAGF,WAAT,EAAsB;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAtB,KAA4C;AACjD,cAAOD,IAAP;AACE,aAAKT,0BAAL;AACA,aAAKC,wBAAL;AACE,iBAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyBE,OAAzB,CAAP;;AACF,aAAKG,eAAL;AACE,iBAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BD,YAAAA,iBAAiB,EAAE;AADW,WAAzB,CAAP;;AAGF;AACE,iBAAOC,KAAP;AATJ;AAWD,KAZD;AAaD,GAnBS;AAoBVM,EAAAA,qBAAqB,EAAE,MAAM,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,GAAD,KAAkC;AAC7DF,IAAAA,QAAQ,CAAC;AACPN,MAAAA,IAAI,EAAET,0BADC;AAEPU,MAAAA,OAAO,EAAE;AACPH,QAAAA,iBAAiB,EAAE;AADZ;AAFF,KAAD,CAAR;AAMAW,IAAAA,OAAO,CAACF,KAAD,CAAP;AACD,GA5BS;AA6BVG,EAAAA,wBAAwB,EAAGX,KAAD,IAAW;AACnC,QAAGA,KAAK,CAACY,GAAN,GAAUC,OAAO,CAACd,iBAArB,EAAwC,OAAO;AAAEe,MAAAA,aAAa,EAAE;AAAjB,KAAP;AACzC;AA/BS,CAAd;;AAkCA,MAAMJ,OAAO,GAAC,UAASF,KAAT,EAAe;AAC3B,QAAMO,GAAG,GAAGP,KAAK,CAACQ,SAAN,EAAZ;AACA,MAAIC,KAAK,GAAC,IAAIC,eAAJ,CAAoB;AAC5BC,IAAAA,MAAM,EAAE,IAAIC,gBAAJ,CAAqB;AAC3BC,MAAAA,YAAY,EAAE,OADa;AAE3BC,MAAAA,MAAM,EAAE,IAAIC,GAAJ,EAFmB;AAG3BC,MAAAA,GAAG,EAAC;AAHuB,KAArB,CADoB,CAM5B;;AAN4B,GAApB,CAAV;AAQAT,EAAAA,GAAG,CAACU,QAAJ,CAAaR,KAAb;AACC,CAXH;;AAYE,MAAMS,SAAS,GAAGlB,KAAK,CAACmB,oBAAN,EAAlB;AACAnB,KAAK,CAACoB,UAAN,CAAiB;AACfC,EAAAA,WAAW,EAAE,sCADE;AAEfH,EAAAA,SAAS,EAAEA,SAFI;AAGfzB,EAAAA,IAAI,EAAC,WAHU;AAIf6B,EAAAA,QAAQ,EAAEC,YAJK;AAKfC,EAAAA,OAAO,EAAE,IALM;AAMfC,EAAAA,MAAM,EAAE;AANO,CAAjB","sourcesContent":["const NSI_HexBin_INITALIZE_START='NSI_HexBin_INITALIZE_START';\r\nconst NSI_HexBin_INITALIZE_END='NSI_HexBin_INITALIZE_END';\r\nconst MAP_HexBin_INITIALIZED='MAP_HexBin_INITIALIZED';\r\n\r\nconst hexbinLayers={\r\n  'HB10K':'hexbin10k',\r\n  'HB2500':'hexbin2500',\r\n  'HB500':'hexbin500',\r\n}\r\nexport default{\r\n    name:'nsi-hexbins',\r\n    getReducer: () => {\r\n      const initialData = {\r\n        _shouldInitialize: false,\r\n      };\r\n      return (state = initialData, { type, payload }) => {\r\n        switch(type){\r\n          case NSI_HexBin_INITALIZE_START:\r\n          case NSI_HexBin_INITALIZE_END:\r\n            return Object.assign({}, state, payload);\r\n          case MAP_INITIALIZED:\r\n            return Object.assign({}, state, {\r\n              _shouldInitialize: true\r\n            })\r\n          default:\r\n            return state;\r\n        }\r\n      }\r\n    },\r\n    doNsiHexBinInitialize: () => ({ dispatch, store, anonGet }) => {\r\n      dispatch({\r\n        type: NSI_HexBin_INITALIZE_START,\r\n        payload: {\r\n          _shouldInitialize: false,\r\n        }\r\n      })\r\n      initMap(store);      \r\n    },\r\n    reactNsiShouldInitialize: (state) => {\r\n      if(state.nsi-hexbins._shouldInitialize) return { actionCreator: \"doNsiHexBinInitialize\" };\r\n    }\r\n  };\r\n\r\nconst initMap=function(store){\r\n  const map = store.selectMap();\r\n  let layer=new VectorTileLayer({\r\n    source: new VectorTileSource({\r\n      attributions: 'USACE',\r\n      format: new MVT(),\r\n      url:\"http://ec2-107-20-76-219.compute-1.amazonaws.com/services/hexbin10k/tiles/{z}/{x}/{y}.pbf\",\r\n    })\r\n    //style: createMapboxStreetsV6Style(Style, Fill, Stroke, Icon, Text)\r\n  })\r\n  map.addLayer(layer)\r\n  }\r\n  const parentUid = store.selectTreeViewRootId();\r\n  store.doAddLayer({\r\n    displayName: 'National Structure Inventory HexBins',\r\n    parentUid: parentUid,\r\n    type:\"notfolder\",\r\n    mapLayer: vectorLayer1,\r\n    visible: true,\r\n    zoomTo: false,\r\n  });"]},"metadata":{},"sourceType":"module"}